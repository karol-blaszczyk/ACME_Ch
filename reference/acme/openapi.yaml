openapi: 3.0.0
info:
  title: ACME
  version: '1.0'
  description: 'Acme Online sells subscriptions to a "box of the month" service.'
servers:
  - url: 'http://localhost:3000'
paths:
  /subscriptions:
    post:
      summary: ''
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: ./models/subscription.v1.yaml
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ../common/models/401.v1.yaml
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription:
                  type: object
                  required:
                    - customer_attributes
                    - credit_card_attributes
                  properties:
                    customer_attributes:
                      type: object
                      required:
                        - first_name
                        - last_name
                        - adress
                        - zip_code
                      properties:
                        first_name:
                          type: string
                        last_name:
                          type: string
                        adress:
                          type: string
                        zip_code:
                          type: string
                    credit_card_attributes:
                      type: object
                      required:
                        - card_number
                        - card_type
                        - expiration_month
                        - expiration_year
                        - cvv
                        - card_holder_name
                        - zip_code
                      properties:
                        card_number:
                          type: string
                        card_type:
                          type: string
                        expiration_month:
                          type: string
                        expiration_year:
                          type: string
                        cvv:
                          type: string
                        card_holder_name:
                          type: string
                        zip_code:
                          type: string
                plan_id:
                  type: number
              required:
                - subscription
        description: ''
      description: "When a request to API endpoint is made, you will attempt a \"purchase\" with the customer's payment information. If the purchase is successful, a new subscription will be created."
      parameters:
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
      security:
        - AccessToken: []
    parameters: []
    delete:
      summary: ''
      responses:
        '204':
          description: No Content
      description: Remove subscription
      security:
        - AccessToken: []
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
    get:
      summary: Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./models/subscription.v1.yaml
              examples:
                example:
                  value:
                    data:
                      - id: '1'
                        type: subscription
                        attributes:
                          price: 4900
                        relationships:
                          plan:
                            data:
                              id: '2'
                              type: plan
                          user:
                            data:
                              id: '1'
                              type: user
                      - id: '2'
                        type: subscription
                        attributes:
                          price: 9900
                        relationships:
                          plan:
                            data:
                              id: '3'
                              type: plan
                          user:
                            data:
                              id: '1'
                              type: user
      description: Get List of current subscriptions
      security:
        - AccessToken: []
      parameters:
        - schema:
            type: string
          in: header
          name: access-token
          required: true
        - schema:
            type: string
          in: header
          name: client
          required: true
        - schema:
            type: string
          in: header
          name: uid
          required: true
      tags:
        - v1.0.0
  /auth:
    post:
      summary: SignUp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    $ref: ../common/models/user.v1.yaml
              examples:
                example:
                  value:
                    status: success
                    data:
                      uid: karol@krl.im
                      id: 1
                      email: karol@krl.im
                      provider: email
                      allow_password_change: false
                      name: null
                      nickname: null
                      image: null
                      created_at: '2019-09-23T11:42:37.438Z'
                      updated_at: '2019-09-23T11:42:37.584Z'
          headers:
            access-token:
              schema:
                type: string
              description: |
                Api Access Token
            uid:
              schema:
                type: string
              description: User uid
            client:
              schema:
                type: string
              description: Api token client
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
              examples:
                example:
                  value:
                    success: false
                    errors:
                      - Please submit proper sign up data in request body.
                    status: error
      description: Email registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                name:
                  type: string
                nickname:
                  type: string
                image:
                  type: string
              required:
                - email
                - password
                - password_confirmation
        description: ''
      tags:
        - v1.0.0
  /auth/sign_in:
    post:
      summary: SignIn
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: ../common/models/user.v1.yaml
          headers:
            access-token:
              schema:
                type: string
              description: User access token
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
      description: User Sign In
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
        description: ''
      tags:
        - v1.0.0
  /plans:
    get:
      summary: Plans
      tags:
        - v1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '1.':
                    type: string
components:
  schemas: {}
  securitySchemes:
    AccessToken:
      type: http
      scheme: Basic
